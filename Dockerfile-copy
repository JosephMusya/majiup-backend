# Stage 1: Build the executable
FROM golang:1.17 AS builder

WORKDIR /go/src/app

COPY . .

RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

# Stage 2: Create a minimal image to run the executable
FROM scratch

WORKDIR /root/
COPY --from=builder /go/src/app/main .

# ==> Revisit
# Expose the port on which the Go application will run (if needed)
EXPOSE 8082

# Stage 2: build front-end
FROM node:18.13.0-alpine3.16 AS frontend-build
WORKDIR /app

# Copy only package.json first and install dependencies
COPY majiup-waziapp/package.json ./
RUN npm install --legacy-peer-deps

# Copy the rest of the frontend source code
COPY majiup-waziapp/ ./

RUN npm run build

# Stage 3: Create the final runtime image
FROM alpine:latest
WORKDIR /root/app

# COPY --from=builder /app/main ./
COPY --from=frontend-build /app/dist/ ./serve/

EXPOSE 8082

CMD ["./main"]